{"version":3,"sources":["components/ContactAddingForm/ContactAddingForm.js","components/ContactFilter/ContactFilter.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Notification/Notification.js","App.js","index.js"],"names":["FormAddingContact","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","type","onChange","required","Component","ContactFilter","ContactListItem","deleteContact","onClick","ContactList","contacts","map","id","Notification","message","className","App","filter","findInContacts","newContactName","find","handleContactCart","newContactCart","doubleContact","onDoubleAddingReaction","addNewContact","changeStateFilter","contactId","newContactList","newContact","uuidv4","alert","console","log","length","filterNormalized","toLocaleLowerCase","filteredContacts","includes","ContactAddingForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d36e093a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class FormAddingContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({[name]:value});\r\n    }\r\n\r\n    handleSubmit = (e) => { \r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    }\r\n    reset = () => {\r\n        this.setState({ name: '', number: ''});\r\n    };\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>\r\n                    Name\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Number\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                    />\r\n                </label>\r\n      \r\n                <button type=\"submit\">\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormAddingContact\r\n\r\n","import React from 'react'\r\n\r\nfunction ContactFilter({value, onChange}) {\r\n    return (\r\n         <label>\r\n             Find contacts by name\r\n             <input\r\n                 type=\"text\"\r\n                 name=\"filter\"\r\n                 value={value}\r\n                 onChange={onChange}\r\n             />\r\n         </label>\r\n    )\r\n}\r\n\r\n\r\nexport default ContactFilter\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction ContactListItem({ name, number, deleteContact}) {\r\n    return (\r\n        <>\r\n            <span>{name} : {number}</span> <button type=\"button\" onClick={deleteContact} >удалить</button>\r\n        </>\r\n    )\r\n}\r\n\r\nContactListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ContactListItem\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ContactListItem from './ContactListItem/ContactListItem'\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n    return (\r\n        <ul>\r\n            {contacts.map(\r\n                ({ id, name, number }) => \r\n                    (<li key={id}>\r\n                        <ContactListItem\r\n                            name={name}\r\n                            number={number}\r\n                            deleteContact={()=>deleteContact(id)}\r\n                        />\r\n                    </li>)\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n    }))\r\n}\r\n\r\nexport default ContactList\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Notification({message}) {\r\n    return (\r\n        <p className=\"messageNotification\">\r\n            {message}\r\n        </p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification\r\n\r\n","import React, { Component } from 'react'\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactAddingForm from './components/ContactAddingForm/ContactAddingForm'\nimport ContactFilter from './components/ContactFilter/ContactFilter'\nimport ContactList from './components/ContactList/ContactList'\nimport Notification from './components/Notification/Notification'\n\nexport class App extends Component {\n  state = {\n    filter: '',\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\n    ],\n    \n  }\n\n  findInContacts = (newContactName) => this.state.contacts.find(({ name }) => name === newContactName);\n  \n  addNewContact(newContactCart){\n    const newContact = {id:uuidv4(),...newContactCart};\n    this.setState(\n      ({ contacts }) => \n      ({contacts: [newContact,...contacts], })\n    );\n  }\n\n  onDoubleAddingReaction(doubleContact) { \n    const { name } = doubleContact;      \n    alert(name + ' is already in contacts.');\n\n    this.setState({ filter: name });\n  }\n\n  handleContactCart = (newContactCart) =>{   \n    const doubleContact = this.findInContacts(newContactCart.name);  \n    if (doubleContact) { \n      this.onDoubleAddingReaction(doubleContact);\n      return\n    }\n    this.addNewContact(newContactCart)\n  }\n\n\n  changeStateFilter = (e) => { \n    const {name, value } = e.currentTarget;\n    this.setState({ [name]: value });    \n  }\n\n  deleteContact = (contactId) => { \n    const newContactList = this.state.contacts.filter(\n      ({id}) =>(id !== contactId)\n    );\n    this.setState({\n      contacts: newContactList\n    });\n  }\n\n  render() {\n    const { filter, contacts } = this.state;\n    console.log(contacts.length);\n    const filterNormalized = filter.toLocaleLowerCase();\n    const filteredContacts = contacts.filter(\n      ({name}) => name.toLocaleLowerCase().includes(filterNormalized)\n    );\n\n    return (\n      <>\n        <h1>Phonebook</h1>  \n        <ContactAddingForm onSubmit={this.handleContactCart} />\n\n        {(contacts.length > 0)\n          ?\n          (<>\n            <h2>Contacts</h2>\n        <ContactFilter value={filter} onChange={this.changeStateFilter} />\n        <ContactList contacts={filteredContacts} deleteContact={this.deleteContact}/>\n          </>)\n          :\n          <Notification message=\"PhoneBook is emty\"/>\n        }\n        \n      </>\n    )\n  }\n}\n\nexport default App\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}